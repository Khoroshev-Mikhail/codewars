console.log('----------------------------Task:507 "Find all possible number combos that sum to a number"----------------------------')
function combos(x, i = 10){
  //1 1 1 1 1 1 1 1 1 1
  //2 1 1 1 1 1 1 1 1
  //2 2 1 1 1 1 1 1
  //2 2 2 2 2
  //3 1 1 1 1 1 1 1
  //3 2 1 1 1 1 1
  //3 2 2 1 1 1
  //3 2 2 2 1
  //3 3 1 1 1 1
  //3 3 2 1 1
  //3 3 3 1
  //3 3 2 2
  
  /*
  Написать функцию которая увеличивает первый, минимальный элемент массива на 1
  и заполняет оставшиеся элементы этим минимальным элементом до тех пор, пока сумма не станет = n
  Но сумма не всегда будет кратна сумме этих элементов - поэтому в последний элемент нужно поставить число равное разности n и получившейся некратной суммы


  */
  let arr = [...x] 
  let min = Math.min(...arr)
  let index = arr.indexOf(min) //Находим первый индекс = минимальному элементу
  arr[index]++ //Увеличиваем этот элемент на 1
  let part = arr.slice(0, index + 1); //Вырезаем массив с 0 до этого элемента включительно
  while(part.reduce((a, b) => a+ b, 0) < i){
    let sum = part.reduce((a, b) => a+ b, 0)
    if(sum + min >= i){
      min = i - sum
    }
    part.push(min)
  }
  return part
}

let b = [3, 2, 1, 1]
console.log(combos(b))